{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"add",
				"addObject"
			],
			[
				"bo",
				"body"
			],
			[
				"obje",
				"object"
			],
			[
				"z",
				"z"
			],
			[
				"get",
				"getWorldTransform"
			],
			[
				"bt",
				"btVector3"
			],
			[
				"start",
				"startTransform"
			],
			[
				"up",
				"updatePhysics"
			],
			[
				"gro",
				"groundTransform"
			],
			[
				"Mes",
				"MeshLambertMaterial"
			],
			[
				"ini",
				"initializePhysics"
			],
			[
				"coll",
				"collisionConfiguration"
			],
			[
				"Nano",
				"Nanotube"
			],
			[
				"atom",
				"atomThikness"
			],
			[
				"spe",
				"speed"
			],
			[
				"ob",
				"objects"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"ad",
				"addObject"
			],
			[
				"obj",
				"object"
			],
			[
				"ve",
				"Vector3"
			],
			[
				"lo",
				"lookAt"
			],
			[
				"came",
				"camera"
			],
			[
				"ren",
				"render"
			],
			[
				"render",
				"renderer"
			],
			[
				"re",
				"renderer"
			],
			[
				"set",
				"setSize"
			],
			[
				"ro",
				"rotation"
			],
			[
				"marg",
				"margin-bottom"
			],
			[
				"margi",
				"margin-top"
			],
			[
				"par",
				"particle"
			],
			[
				"Li",
				"LINK_STATUS"
			],
			[
				"ver",
				"vertexShader"
			],
			[
				"sha",
				"shaderProgram"
			],
			[
				"cre",
				"createProgram"
			],
			[
				"vec",
				"vec4"
			],
			[
				"u",
				"uMVMatrix"
			],
			[
				"dete",
				"detectCL"
			],
			[
				"init",
				"initShaders"
			],
			[
				"so",
				"sourceVertex"
			],
			[
				"shade",
				"shaderVertex"
			],
			[
				"shader",
				"shaderScript"
			],
			[
				"dra",
				"drawCube"
			],
			[
				"mou",
				"mousePressed"
			],
			[
				"colo",
				"colorBackground"
			],
			[
				"can",
				"canvas"
			],
			[
				"canvas",
				"canvas_container"
			],
			[
				"sc",
				"Scene"
			],
			[
				"posi",
				"position"
			],
			[
				"po",
				"position"
			],
			[
				"Me",
				"MeshBasicMaterial"
			],
			[
				"v",
				"Vector3"
			],
			[
				"ge",
				"geometry"
			],
			[
				"se",
				"section	Tag"
			],
			[
				"col",
				"colliderapp"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/index.html",
			"settings":
			{
				"buffer_size": 496,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/js/collider.js",
			"settings":
			{
				"buffer_size": 8394,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ewgenius/Projects/web/ammo.js/examples/hello_world.js",
			"settings":
			{
				"buffer_size": 3004,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// shim layer with setTimeout fallback\nwindow['requestAnimFrame'] = (function(){\n  return  window.requestAnimationFrame       || \n          window.webkitRequestAnimationFrame || \n          window.mozRequestAnimationFrame    || \n          window.oRequestAnimationFrame      || \n          window.msRequestAnimationFrame     || \n          function(/* function */ callback, /* DOMElement */ element){\n            window.setTimeout(callback, 1000 / 60);\n          };\n})();\n\n(function() {\n	\n	var projector, renderer, scene, light, camera,\n		initScene, render, main, updateBoxes,\n		createBox, now, lastbox = 0, boxes = [];\n	\n	initScene = function() {\n		var collisionConfiguration, dispatcher, overlappingPairCache, solver, // Ammo world\n			ground, groundShape, groundTransform, groundMass, localInertia, motionState, rbInfo, groundAmmo;\n		\n		\n		// Projector\n		projector = new THREE.Projector();\n		\n		\n		// Renderer\n		renderer = new THREE.WebGLRenderer({antialias: true});\n		renderer.shadowMapEnabled = true;\n		renderer.shadowMapSoft = true;\n		renderer.setSize( window.innerWidth, window.innerHeight );\n		document.getElementById( 'viewport' ).appendChild( renderer.domElement );\n		\n		\n		// Scene\n		scene = new THREE.Scene();\n		\n		\n		// Light\n		light = new THREE.DirectionalLight( 0xFFFFFF );\n		light.position.set( 40, 40, 25 );\n		light.target.position.copy( scene.position );\n		light.castShadow = true;\n		light.shadowCameraLeft = -25;\n		light.shadowCameraTop = -25;\n		light.shadowCameraRight = 25;\n		light.shadowCameraBottom = 25;\n		light.shadowBias = -.0001\n		scene.add( light );\n		\n		\n		// Ammo world\n		collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n		dispatcher = new Ammo.btCollisionDispatcher( collisionConfiguration );\n		overlappingPairCache = new Ammo.btDbvtBroadphase();\n		solver = new Ammo.btSequentialImpulseConstraintSolver();\n		scene.world = new Ammo.btDiscreteDynamicsWorld( dispatcher, overlappingPairCache, solver, collisionConfiguration );\n		scene.world.setGravity(new Ammo.btVector3(0, -12, 0));\n		\n		\n		// Camera\n		camera = new THREE.PerspectiveCamera(\n			35,\n			window.innerWidth / window.innerHeight,\n			1,\n			1000\n		);\n		camera.position.set( 60, 50, 60 );\n		camera.lookAt( scene.position );\n		scene.add( camera );\n		\n		\n		// Ground\n		ground = new THREE.Mesh(\n			new THREE.PlaneGeometry( 50, 50 ),\n			new THREE.MeshLambertMaterial({ color: 0xDDDDDD })\n		);\n		ground.receiveShadow = true;\n		ground.rotation.x = -Math.PI / 2;\n		scene.add( ground );\n		\n		\n		// Ground physics\n		groundShape = new Ammo.btBoxShape(new Ammo.btVector3( 25, 1, 25 ));\n		groundTransform = new Ammo.btTransform();\n		groundTransform.setIdentity();\n		groundTransform.setOrigin(new Ammo.btVector3( 0, -1, 0 ));\n		\n		groundMass = 0;\n		localInertia = new Ammo.btVector3(0, 0, 0);\n		motionState = new Ammo.btDefaultMotionState( groundTransform );\n		rbInfo = new Ammo.btRigidBodyConstructionInfo( groundMass, motionState, groundShape, localInertia );\n		groundAmmo = new Ammo.btRigidBody( rbInfo );\n		scene.world.addRigidBody( groundAmmo );\n	};\n	\n	createBox = function() {\n		var box, position_x, position_z,\n			mass, startTransform, localInertia, boxShape, motionState, rbInfo, boxAmmo;\n		\n		position_x = Math.random() * 10 - 5;\n		position_z = Math.random() * 10 - 5;\n		\n		// Create 3D box model\n		box = new THREE.Mesh(\n			new THREE.CubeGeometry( 3, 3, 3),\n			new THREE.MeshLambertMaterial({ opacity: 0, transparent: true })\n		);\n		box.material.color.setRGB( Math.random() * 100 / 100, Math.random() * 100 / 100, Math.random() * 100 / 100 );\n		box.castShadow = true;\n		box.receiveShadow = true;\n		box.useQuaternion = true;\n		scene.add( box );\n		\n		new TWEEN.Tween(box.material).to({opacity: 1}, 500).start();\n		\n		// Create box physics model\n		mass = 3 * 3 * 3;\n		startTransform = new Ammo.btTransform();\n		startTransform.setIdentity();\n		startTransform.setOrigin(new Ammo.btVector3( position_x, 20, position_z ));\n		\n		localInertia = new Ammo.btVector3(0, 0, 0);\n		\n		boxShape = new Ammo.btBoxShape(new Ammo.btVector3( 1.5, 1.5, 1.5 ));\n		boxShape.calculateLocalInertia( mass, localInertia );\n		\n		motionState = new Ammo.btDefaultMotionState( startTransform );\n		rbInfo = new Ammo.btRigidBodyConstructionInfo( mass, motionState, boxShape, localInertia );\n		boxAmmo = new Ammo.btRigidBody( rbInfo );\n		scene.world.addRigidBody( boxAmmo );\n		\n		boxAmmo.mesh = box;\n		boxes.push( boxAmmo );\n	};\n	\n	updateBoxes = function() {\n		scene.world.stepSimulation( 1 / 60, 5 );\n		var i, transform = new Ammo.btTransform(), origin, rotation;\n		\n		for ( i = 0; i < boxes.length; i++ ) {\n			boxes[i].getMotionState().getWorldTransform( transform );\n			\n			origin = transform.getOrigin();\n			boxes[i].mesh.position.x = origin.x();\n			boxes[i].mesh.position.y = origin.y();\n			boxes[i].mesh.position.z = origin.z();\n			\n			rotation = transform.getRotation();\n			boxes[i].mesh.quaternion.x = rotation.x();\n			boxes[i].mesh.quaternion.y = rotation.y();\n			boxes[i].mesh.quaternion.z = rotation.z();\n			boxes[i].mesh.quaternion.w = rotation.w();\n		};\n	};\n	\n	render = function render() {\n		renderer.render(scene, camera);\n	};\n	\n	main = function main() {\n		\n		// Create a new box every second\n		now = new Date().getTime();\n		if ( now - lastbox > 1000 ) {\n			createBox();\n			lastbox = now;\n		}\n		\n		// Run physics\n		updateBoxes();\n		\n		render();\n		window.requestAnimFrame(main);\n	};\n	\n	window.onload = function() {\n		initScene();\n		TWEEN.start();\n		requestAnimFrame(main);\n	}\n	\n})();",
			"settings":
			{
				"buffer_size": 5546,
				"line_ending": "Unix",
				"name": "'use strict';"
			}
		}
	],
	"build_system": "Packages/User/chrome_run.sublime-build",
	"command_palette":
	{
		"height": 285.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 347.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ewgenius/Applications/blender-2.65a-linux-glibc211-x86_64/2.65/scripts/addons/modules/ui_utils.py",
		"/home/ewgenius/Projects/web/nanocollider/src/js/collider.js",
		"/home/ewgenius/Projects/workspace/NanoColliderCalc/src/ewgenius/nanocollidercalc/nanoobjects/structures/Graphene.java",
		"/home/ewgenius/Projects/workspace/NanoColliderCalc/src/ewgenius/nanocollidercalc/nanoobjects/structures/Nanotube.java",
		"/home/ewgenius/Projects/web/mrdoob-three.js-f7e120d/examples/css3d_molecules.html",
		"/home/ewgenius/Projects/web/nanocollider/src/css/mainstyle.css",
		"/home/ewgenius/Projects/web/mrdoob-three.js-f7e120d/examples/js/controls/FirstPersonControls.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/J3DI.js",
		"/home/ewgenius/Projects/web/webgl_examples/WebGL/sdk/demos/common/webgl-utils.js",
		"/home/ewgenius/Projects/web/webgl_examples/WebGL/sdk/demos/webkit/Earth.html",
		"/home/ewgenius/Projects/web/webgl_examples/WebGL/sdk/demos/google/nvidia-vertex-buffer-object/demo.js",
		"/home/ewgenius/Projects/web/webgl_examples/WebGL/sdk/demos/google/image-texture-test/demo.js",
		"/home/ewgenius/Projects/web/nanocollider/src/index.html",
		"/home/ewgenius/Projects/web/nanocollider/src/js/old",
		"/home/ewgenius/Projects/web/nanocollider/src/css/kendo.common.min.css",
		"/home/ewgenius/Projects/web/nanocollider/src/js/glMatrix.js",
		"/home/ewgenius/Projects/web/nanocollider/src/shaders/shader.vs",
		"/home/ewgenius/Projects/web/nanocollider/src/shaders/fs.shader",
		"/home/ewgenius/Projects/web/nanocollider/src/shaders/vs.shader",
		"/home/ewgenius/.config/sublime-text-2/Packages/User/chrome_run.sublime-build",
		"/home/ewgenius/.config/sublime-text-2/Packages/User/localserver.sublime-build",
		"/home/ewgenius/Projects/web/glmol/js/GLmol.js",
		"/home/ewgenius/Projects/workspace/NanoColliderWeb/src/js/collider.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/WebGLFramework.js",
		"/home/ewgenius/Desktop/structures/buckytube.sdf",
		"/home/ewgenius/Archive/data/forge/client/net/minecraftforge/client/IItemRenderer.java",
		"/home/ewgenius/.minecraft/lastlogin",
		"/home/ewgenius/Projects/web/nanocollider/src/js/test.js",
		"/home/ewgenius/Projects/web/soft-shadow-mapping-master/build.py",
		"/home/ewgenius/Projects/web/nanocollider/src/index_.html",
		"/home/ewgenius/Projects/web/nanocollider/src/js/jquery.mousewheel.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/three.min.js",
		"/home/ewgenius/.minecraft/options.txt",
		"/home/ewgenius/Projects/web/nanocollider/src/js/detector.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/jsgraphics.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/collider_old.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/canvasmol.js",
		"/home/ewgenius/Projects/web/nanocollider/src/js/jsgeometry.js",
		"/home/ewgenius/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/ewgenius/Projects/web/nanocollider/index.html",
		"/home/ewgenius/Projects/web/nanocollider/css/mainstyle.css",
		"/home/ewgenius/Projects/web/nanocollider/data/animation.xml",
		"/home/ewgenius/Projects/web/nanocollider/js/canvasmol.js",
		"/home/ewgenius/Projects/web/nanocollider/js/jquery.mouseheel.js",
		"/home/ewgenius/Projects/web/nanocollider/js/collider.js",
		"/home/ewgenius/Projects/web/xonix/index.html",
		"/home/ewgenius/Projects/web/xonix/js/xonix.js",
		"/home/ewgenius/Projects/web/jsclasses/classes.js",
		"/home/ewgenius/Projects/web/xonix/js/jquery.min.js",
		"/home/ewgenius/Projects/web/xonix/js/three.min.js",
		"/home/ewgenius/Projects/web/kendoui/examples/web/combobox/index.html",
		"/home/ewgenius/Projects/web/nanocollider/css/kendo.default.min.css",
		"/home/ewgenius/Projects/web/nanocollider/js/kendo.web.min.js",
		"/home/ewgenius/Projects/C/primenumbers.cpp",
		"/home/ewgenius/Projects/python/informationcoding/main.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"bodies",
			"boxes",
			" )",
			"( ",
			"    ",
			"this",
			"    ",
			"renderer",
			"makePerspective",
			"   ",
			"drawAtomsAsSphere",
			"this.modelGroup",
			"this.scene",
			"THREE.Sp",
			"mouse",
			"drawCyl",
			"drawCyly",
			"container",
			"##",
			"stdout",
			"tty",
			"edit\"",
			"send",
			"CylinderGeometry",
			"lookAt",
			"sphereGeometry",
			"this.context",
			"Vector3",
			"getCon",
			"3d\"",
			"3d",
			"render_",
			"render_molecule",
			"refresh_background",
			"MENU_MAP",
			"kendoB",
			"kendoButton",
			"button"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bodies",
			")",
			"(",
			"	",
			"self",
			"	",
			"    ",
			"//",
			"this.gl",
			"Vector4"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/index.html",
					"settings":
					{
						"buffer_size": 496,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/js/collider.js",
					"settings":
					{
						"buffer_size": 8394,
						"regions":
						{
						},
						"selection":
						[
							[
								3096,
								3096
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "/home/ewgenius/Projects/web/ammo.js/examples/hello_world.js",
					"settings":
					{
						"buffer_size": 3004,
						"regions":
						{
						},
						"selection":
						[
							[
								859,
								859
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								3849,
								3849
							]
						],
						"settings":
						{
							"auto_name": "'use strict';",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2385.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.712579942223,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 252.0,
	"status_bar_visible": true
}
